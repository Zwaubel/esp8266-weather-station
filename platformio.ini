; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


; *********************************************************************************************************************
; 2021-06-13
;
; It is a pity PlatformIO does not support building such Arduino libraries locally out of the box. The current solution
; evolved out of a discussion at https://community.platformio.org/t/build-an-arduino-library-for-esp8266-locally/10656
; Occasionally the build fails because PIO somehow gets the dependency tree completely wrong. Running the build again
; usually fixes it. 
;
; The default configuration will build *all* examples but you can easily uncomment the envs you do not need if you are 
; working on just a single example.
; *********************************************************************************************************************

[platformio]
lib_dir = $PROJECT_DIR

[env]
extra_scripts = pre:adjust_src_dir.py

[esp_libs_common]
lib_deps =  
    squix78/JsonStreamingParser @ ^1.0.5
    wnatth3/WiFiManager @ ^2.0.16-rc.2
    thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays @ ^4.2.0
    ESP8266 Weather Station @ ^2.2.0

[esp8266]
platform = espressif8266
framework = arduino
board = d1_mini
upload_speed = 921600
board_build.f_cpu = 160000000L
lib_deps =  
    ${esp_libs_common.lib_deps}
    https://github.com/wladimir-computin/brzo_i2c.git
    DHT sensor library for ESPx @ ^1.19

[esp32]
platform = espressif32
framework = arduino
board = seeed_xiao_esp32c3
; lib_ldf_mode = deep+
lib_deps =  
    ${esp_libs_common.lib_deps}
    adafruit/Adafruit AHTX0 @ ^2.0.5

; comment the ones you do not need
; [env:AerisForecastsDemo]
; extends = esp8266
; [env:AerisObservationDemo]
; extends = esp8266
; [env:AerisSunMoonDemo]
; extends = esp8266
; [env:AstronomyDemo]
; extends = esp8266
; [env:OpenWeatherMapCurrentDemo]
; extends = esp8266
; [env:OpenWeatherMapForecastDemo]
; extends = esp8266
; [env:OpenWeatherMapOneCallDemo]
; extends = esp8266
; [env:PlaneSpotterDemo]
; extends = esp8266
; [env:SunMoonCalcDemo]
; extends = esp8266
; [env:WeatherStationDemo]
; extends = esp8266
; [env:WorldClockDemo]
; extends = esp8266
; [env:WeatherStationWifiManagerDemoESP8266]
; extends = esp8266
[env:WeatherStationWifiManagerDemoESP32]
extends = esp32
